#jinja2: lstrip_blocks: "True", trim_blocks: "True"
#!/bin/sh
#{{ ansible_managed }}

sysctl -w net.ipv4.neigh.default.gc_thresh1=512
sysctl -w net.ipv4.neigh.default.gc_thresh2=1024
sysctl -w net.ipv4.neigh.default.gc_thresh3=2048

for i in F X Z; do
  iptables -${i}
  for t in mangle nat raw; do
    iptables -${i} -t ${t}
  done
done
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -t nat -P PREROUTING ACCEPT
iptables -t nat -P POSTROUTING ACCEPT
iptables -t nat -P OUTPUT ACCEPT

##### filter table #####
{% set proxy_heartbeat_cdn = heartbeat is defined | ternary(heartbeat.outputs.proxy | selectattr("host", "match", "^%s" % inventory_hostname_short) | list | default([None], True) | first, "None") %}

# localhost
#iptables -A INPUT -s 127.0.0.1 -j ACCEPT
iptables -A INPUT -i lo -j ACCEPT

{% if memcached.connection == "tcp" %}
iptables -A INPUT -s {{ memcached.cluster_net }}/{{ memcached.cluster_netmask }} -j ACCEPT -m comment --comment "memcached_tcp"
iptables -t mangle -A PREROUTING -s {{ memcached.cluster_net }}/{{ memcached.cluster_netmask }} -j ACCEPT -m comment --comment "memcached_tcp"
{% endif %}

{% for ip in ipv4.hko_gw + ipv4.hk_eqx01 %}
iptables -A INPUT -s {{ ip | resolve }} -j ACCEPT -m comment --comment "allbrightnet"
#iptables -A OUTPUT -d {{ ip | resolve }} -j ACCEPT -m comment --comment "allbrightnet"
{% endfor %}

{% if proxy_heartbeat_cdn %}
sysctl -w net.ipv4.ip_forward=1
# conntrack is required if NAT is used, that's the proxy hearbeat case
iptables -t raw -I PREROUTING -p {{ proxy_heartbeat_cdn.proto }} --dport {{ proxy_heartbeat_cdn.port }} {{ track }}

iptables -t nat -A PREROUTING -p {{ proxy_heartbeat_cdn.proto }} --dport {{ proxy_heartbeat_cdn.port }} -j DNAT --to {{ heartbeat.outputs.direct.host }} -m comment --comment "heartbeat_proxy"
iptables -t nat -A POSTROUTING -p {{ heartbeat.outputs.direct.proto }} -d {{ heartbeat.outputs.direct.host }} --dport {{ heartbeat.outputs.direct.port }} -j SNAT --to-source {{ proxy_heartbeat_cdn.host | resolve }} -m comment --comment "heartbeat_proxy"
{% endif %}

iptables -A INPUT -p tcp -s 183.178.132.168 --dport {{ const.port.ssh }} -j ACCEPT -m comment --comment "Ken Home"
#iptables -A INPUT -p tcp -s 183.178.132.168 --dport 8081 -j ACCEPT

{% set ports = [['tcp',const.port.ssh], ['udp',const.port.snmp]] %}
{% if memcached.connection == "tcp" %}
{{ ports.append(['tcp', memcached.tcp.cluster_port]) }}
{% endif %}

iptables -A INPUT -s 10.1.0.0/16 -j ACCEPT -m comment --comment "UDomain"
{% for ip in ipv4.udomain | default([])%}
{% for p in ports %}
iptables -A INPUT -p {{ p[0] }} -s {{ ip | resolve }} --dport {{ p[1] }} -j ACCEPT -m comment --comment "UDomain"
{% endfor %}
{% endfor %}

{% for p in ports %}
iptables -A INPUT -p {{ p[0] }} --dport {{ p[1] }} -j DROP
{% endfor %}
