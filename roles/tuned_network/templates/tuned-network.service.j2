#jinja2: lstrip_blocks: "True", trim_blocks: "True"
# {{ ansible_managed }}

[Unit]
Description=Network Interfaces Tuning
Wants=network-online.target
After=network.target network-online.target
ConditionFileIsExecutable=/sbin/ip
ConditionFileIsExecutable=/sbin/ifconfig
ConditionFileIsExecutable=/bin/bash
ConditionFileIsExecutable=/sbin/ethtool

[Service]
Type=oneshot
RemainAfterExit=yes
EnvironmentFile=/etc/default/tuned-network
ExecStart=/bin/bash -c "for dev in $$(ls -1 /sys/class/net | egrep \"^v?[en|eth]\"); do devname=$${dev##*/}; /sbin/ifconfig $${devname} txqueuelen $TXQUEUELEN; /sbin/ip link set $${devname} multicast off; done; def_r=$$(/sbin/ip route show | grep \"^default\"); /sbin/ip route change $${def_r} initrwnd $INITRWND initcwnd $INITCWND; tc qdisc replace dev $${devname} root mq || tc qdisc replace dev $${devname} root $$(sysctl -n net.core.default_qdisc); /sbin/ethtool -l $${devname} >/dev/null 2>&1 && (for i in rx tx other combined; do /sbin/ethtool -L $${devname} $$i $$(/sbin/ethtool -l $${devname} | grep -i ^$$i: | awk -F' ' '{print $$2}' | sort -n | head -n 1); done;{% if vm | bool %} /sbin/ethtool -K $${devname} tso off gso off{% endif %}) || echo"
ExecStop=/bin/bash -c "for dev in $$(ls -1 /sys/class/net | egrep \"^v?[en|eth]\"); do devname=$${dev##*/}; /sbin/ifconfig $${devname} txqueuelen 1000; /sbin/ip link set $${devname} multicast on; done; def_r=$$(/sbin/ip route show | grep \"^default\"); /sbin/ip route change $${def_r} initrwnd 0 initcwnd 0;{% if vm | bool %} /sbin/ethtool -l $${devname} >/dev/null 2>&1 && /sbin/ethtool -K $${devname} tso on gso on || echo{% endif %}"
StandardOutput=null
StandardError=null

# Set up a new file system namespace and mounts private /tmp and /var/tmp directories
# so this service cannot access the global directories and other processes cannot
# access this service's directories.
PrivateTmp=true

{% if systemd_service_mgr_version | int >= 214 %}
# Mounts the /usr, /boot, and /etc directories read-only for processes invoked by this unit.
ProtectSystem=full
{% endif %}

# Ensures that the service process and all its children can never gain new privileges
NoNewPrivileges=true

{% if systemd_service_mgr_version | int >= 209 %}
# Sets up a new /dev namespace for the executed processes and only adds API pseudo devices
# such as /dev/null, /dev/zero or /dev/random (as well as the pseudo TTY subsystem) to it,
# but no physical devices such as /dev/sda.
PrivateDevices=true
{% endif %}

{% if systemd_service_mgr_version | int >= 183 %}
# Required for dropping privileges and running as a different user
CapabilityBoundingSet=CAP_SETGID CAP_SETUID CAP_SYS_RESOURCE
{% endif %}

{% if systemd_service_mgr_version | int >= 231 and is_seccomp_enabled | bool %}
# Attempts to create memory mappings that are writable and executable at the same time,
# or to change existing memory mappings to become executable are prohibited.
MemoryDenyWriteExecute=true
{% endif %}

{% if systemd_service_mgr_version | int >= 232 %}
# Explicit module loading will be denied. This allows to turn off module load and unload
# operations on modular kernels. It is recommended to turn this on for most services that
# do not need special file systems or extra kernel modules to work.
ProtectKernelModules=true

# Kernel variables accessible through /proc/sys, /sys, /proc/sysrq-trigger, /proc/latency_stats,
# /proc/acpi, /proc/timer_stats, /proc/fs and /proc/irq will be made read-only to all processes
# of the unit. Usually, tunable kernel variables should only be written at boot-time, with the
# sysctl.d(5) mechanism. Almost no services need to write to these at runtime; it is hence
# recommended to turn this on for most services.
ProtectKernelTunables=true

# The Linux Control Groups (cgroups(7)) hierarchies accessible through /sys/fs/cgroup will be
# made read-only to all processes of the unit. Except for container managers no services should
# require write access to the control groups hierarchies; it is hence recommended to turn this on
# for most services
ProtectControlGroups=true
{% endif %}

{% if systemd_service_mgr_version | int >= 231 and is_seccomp_enabled | bool %}
# Any attempts to enable realtime scheduling in a process of the unit are refused.
RestrictRealtime=true
{% endif %}

{% if systemd_service_mgr_version | int >= 211 and is_seccomp_enabled | bool %}
# Restricts the set of socket address families accessible to the processes of this unit.
# Protects against vulnerabilities such as CVE-2016-8655
#RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
{% endif %}

{% if systemd_service_mgr_version | int >= 233 %}
# Takes away the ability to create or manage any kind of namespace
RestrictNamespaces=true
{% endif %}

[Install]
WantedBy=multi-user.target
