---
# https://wiki.ubuntu.com/Kernel/LTSEnablementStack
- name: Install Ubuntu LTS Enablement Stacks
  set_fact:
    hwe_prefix: "{{ hwe_enabled | ternary('-hwe-%s' % ansible_distribution_version, '') }}"
    kernel_type: "{{ (container or vm) | ternary('virtual', 'generic') }}"
  when: not container

- name: Install appropriate kernel
  apt:
    name: "{{ item }}"
    install_recommends: yes
  with_items:
    - "linux-{{ kernel_type }}{{ hwe_prefix }}"
    - "linux-tools-{{ kernel_type }}{{ hwe_prefix }}"
  register: ubuntu_kernel
  when: not container

- name: Install grub components
  apt:
    name: "{{ item }}"
    state: "{{ container | ternary('absent', 'present') }}"
    install_recommends: no
  with_items:
    - grub2-common

- include: update-kernel-reboot.yml
  when: not container and ubuntu_kernel | changed

- name: Upgrade kernel to latest version
  apt:
#    autoremove: yes
    upgrade: dist
    # install_recommends: no
  register: ubuntu_kernel_latest

- name: Minimify Linux installation if it is a virtual server
  apt:
    name: "{{ item }}"
#    autoremove: yes
    purge: yes
    state: absent
    install_recommends: no
  register: ubuntu_minify
  with_items:
    - linux-image-extra*
    - linux-firmware
  when: vm

- name: Cleanup non-hwe kernel images
  apt:
    name: "{{ item }}"
#    autoremove: yes
    purge: yes
    state: absent
    install_recommends: no
  register: ubuntu_minify
  with_items:
    - linux-{{ kernel_type }}
    - linux-tools-{{ kernel_type }}
  when: hwe_enabled and not container

- include: update-kernel-reboot.yml
  when: ubuntu_kernel_latest | changed or ubuntu_minify | changed

- name: Remove old kernel images
  shell: for i in $(dpkg -l | cut -d' ' -f3 | tail -n +6 | grep -E 'linux-image-[0-9]+' | grep -Fv $(uname -r)); do apt -y purge $i; done;
  changed_when: False
  when: not container

- name: Remove old kernel headers
  shell: for i in $(dpkg -l | cut -d' ' -f3 | tail -n +6 | grep -E 'linux-headers-[0-9]+' | grep -Fv $(uname -r | tr -d '[a-z]' | sed 's/-$//')); do apt -y purge $i; done;
  changed_when: False
  when: not container
